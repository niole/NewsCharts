'use strict';

var React = require('react');
var d3 = require('d3');


module.exports = React.createClass({

  displayName: 'Arc',

  propTypes: {
    fill: React.PropTypes.string,
    d: React.PropTypes.string,
    startAngle: React.PropTypes.number,
    endAngle: React.PropTypes.number,
    innerRadius: React.PropTypes.number,
    outerRadius: React.PropTypes.number,
    labelTextFill: React.PropTypes.string,
    valueTextFill: React.PropTypes.string
  },

  getDefaultProps:function() {
    return {
      labelTextFill: 'black',
      valueTextFill: 'black'
    };
  },
  componentDidMount: function() {
    d3.selection.prototype.moveToFront = function() {
      return this.each(function(){
      this.parentNode.appendChild(this);
      });
    };

    d3.selection.prototype.moveToBack = function() { 
        return this.each(function() { 
            var firstChild = this.parentNode.firstChild; 
            if (firstChild) {
                this.parentNode.insertBefore(this, firstChild);
            }
        });
    };

    var textItems = d3.selectAll("text");
    var pathItems = d3.selectAll("g");

    pathItems.moveToBack();
//    pathItems.on("mouseover",function(){
//      var sel = d3.select(this);
//      console.log('sel');
//      sel.moveToBack();
//    });

   textItems.on("mouseover",function(){
      var sel = d3.select(this);
      console.log('sel');
      sel.moveToFront();
    });
  },

  render:function() {
    var props = this.props;
    var arc = d3.svg.arc()
      .innerRadius(props.innerRadius)
      .outerRadius(props.outerRadius)
      .startAngle(props.startAngle)
      .endAngle(props.endAngle);
    var rotate = ("rotate(" + ( (props.startAngle+props.endAngle)/2 * (180/Math.PI)) + ")");
    var positions = arc.centroid();
    var radius = props.outerRadius;
    var dist   = radius + 35;
    var angle  = (props.startAngle + props.endAngle) / 2;
    var x      = dist * (1.2 * Math.sin(angle));
    var y      = -dist * Math.cos(angle);
    var t = ("translate(" + x + "," + y + ")");

    return (
      React.createElement("g", {className: "rd3-piechart-arc"},
        React.createElement("path", {
          className: "path",
          d: arc(),
          fill: props.fill}
        ),
//        React.createElement("line", {
//          className: "line",
//          x1: "0",
//          x2: "0",
//          y1: -radius - 2,
//          y2: -radius - 26,
//          stroke: props.labelTextFill,
//          transform: rotate,
//          style: {
//            'fill': props.labelTextFill,
//            'strokeWidth': 2,
//            'zIndex': -1
//          }
//        }
//        ),
//        React.createElement("text", {
//          className: "rd3-piechart-label",
//          transform: t,
//          dy: ".35em",
//          style: {
//            'textAnchor': 'middle',
//            'fill': props.labelTextFill,
//            'shapeRendering': 'crispEdges',
//          }},
//          props.label
//        ),
        React.createElement("text", {
          className: "rd3-piechart-text",
          x1: "0",
          x2: "0",
          y1: -radius - 2,
          y2: -radius - 26,
          dy: ".35em",
          transform: ("translate(" + arc.centroid() + ")," + "rotate(" + ( ( (props.startAngle+props.endAngle)/2 * (180/Math.PI)) -90) + ")" ),
          style: {
            'shapeRendering': 'crispEdges',
            'textAnchor': 'middle',
            'fill': props.valueTextFill,
            }},
          props.value + " " + props.label //+ '%'
        )
      )
    );
  }
});
